@startuml
'https://plantuml.com/class-diagram


interface TeacherService
interface InformService
interface FileService
interface CheckService

interface InformDao
interface FileDao

class TeacherServiceImpl
class InformServiceImpl
class FileServiceImpl
class CheckServiceImpl

'class TeacherController

TeacherService <|. TeacherServiceImpl
InformService <|. InformServiceImpl
FileService <|. FileServiceImpl
'TeacherService <.. TeacherController
InformDao <.. InformServiceImpl
InformService <.. TeacherServiceImpl
FileService <.. TeacherServiceImpl
FileDao <.. FileServiceImpl
'FileService <. TeacherController
CheckService <|..CheckServiceImpl
CheckService <. TeacherServiceImpl
FileService <... CheckServiceImpl

interface TeacherService {
    loadUserByUsername(String) : UserDetails
    updateUser(User) : Integer
    selectUserById(Integer) : User
    updatePassword(User) : Integer
    selectUserByRealname(String) : User
    teachCourseById(String)) : Integer
    pushInform(Map<String, Object>) : Integer
    checkSubmition(Map<String, Object>) : Map<String, Object>
    askForSubmition(Map<String, Object>) : Map<String, Object>
    checkDuplication(Map<String, Object>) : Map<String, Object>
}

class TeacherServiceImpl {
    TeacherDao : TeacherDao
    informService : InformService
    courseService : CourseService
    fileService : FileService
    checkService : CheckService

    loadUserByUsername(String) : UserDetails
    updateUser(User) : Integer
    selectUserById(Integer) : User
    updatePassword(User) : Integer
    selectUserByRealname(String) : User
    teachCourseById(String)) : Integer
    pushInform(Map<String, Object>) : Integer
    checkSubmition(Map<String, Object>) : Map<String, Object>
    askForSubmition(Map<String, Object>) : Map<String, Object>
    checkDuplication(Map<String, Object>) : Map<String, Object>
}

interface InformService {
    pushInform(Inform) : Integer
    delInform(String) : Integer
    getInformByTeacher(String) : List<Inform>
    getInformByCourse(String) : List<Inform>
}
class InformServiceImpl {
    informDao : InformDao
    pushInform(Inform) : Integer
    delInform(String) : Integer
    getInformByTeacher(String) : List<Inform>
    getInformByCourse(String) : List<Inform>
}
interface InformDao {
    pushInform(Inform) : Integer
    delInform(String) : Integer
    getInformByTeacher(String) : List<Inform>
    getInformByCourse(String) : List<Inform>
}
'class TeacherController {
'    TeacherService : TeacherService
'
'        updateUser(User) : Integer
'        selectUserById(Integer) : User
'        updatePassword(User) : Integer
'        selectUserByRealname(String) : User
'        teachCourseById(String)) : Integer
'        pushInform(Map<String, Object>) : Integer
'        checkSubmition(Map<String, Object>) : Map<String, Object>
'        askForSubmition(Map<String, Object>) : Map<String, Object>
'        checkDuplication(Map<String, Object>) : Map<String, Object>
'}

interface FileDao {
    getAllFiles() : List<File>
    getFileById(String) : File
    getFileByName(String) : File
    getFileByPath(String) : File
    getFilesBySubmitter(String) : List<File>
    saveOne(File) : Integer
    updateOneById(String) : Integer
    deleteOneById(String) : Integer
}
interface FileService {
    getAllFiles() : List<File>
    getFileById(String) : File
    getFileByName(String) : File
    getFileByPath(String) : File
    getFilesBySubmitter(String) : List<File>
    upload(File) : Integer
    upload(List<File>) : Integer
    updateOneById(String) : Integer
    deleteOneById(String) : Integer
}
class FileServiceImpl {
    fileDao : FileDao

    getAllFiles() : List<File>
    getFileById(String) : File
    getFileByName(String) : File
    getFileByPath(String) : File
    getFilesBySubmitter(String) : List<File>
    upload(File) : Integer
    upload(List<File>) : Integer
    updateOneById(String) : Integer
    deleteOneById(String) : Integer
}

interface CheckService {
    check(List<String>, String) : String
}
class CheckServiceImpl {
    fileService : FileService
    check(List<String>, String) : String
}


@enduml